// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for details.


import {FileSystem} from "./utils/node/fileSystem";
import {Package} from "./utils/node/package";
import * as path from "path";
import * as vscode from "vscode";

import {ReactNativeCommandExecutor} from "./utils/reactNativeCommandExecutor";

export function activate(context: vscode.ExtensionContext): void {
    let currentPackage = new Package(vscode.workspace.rootPath);
    currentPackage.dependencies().then(dependencies => {
        if (dependencies && dependencies["react-native"]) {
            // We are in a React Native project
            // Setup the debugger for the project
            setupReactNativeDebugger();
        }
    }).catch(() => { });

    let reactNativeCommandExecutor = new ReactNativeCommandExecutor(vscode.workspace.rootPath);

    // Register React Native commands
    context.subscriptions.push(vscode.commands.registerCommand("reactNative.runAndroid",
    () => reactNativeCommandExecutor.executeCommandInContext(() => reactNativeCommandExecutor.runAndroid())));
    context.subscriptions.push(vscode.commands.registerCommand("reactNative.runIos",
    () => reactNativeCommandExecutor.executeCommandInContext(() => reactNativeCommandExecutor.runIos())));
    context.subscriptions.push(vscode.commands.registerCommand("reactNative.startPackager",
    () => reactNativeCommandExecutor.executeCommandInContext(() => reactNativeCommandExecutor.startPackager())));
    context.subscriptions.push(vscode.commands.registerCommand("reactNative.stopPackager",
    () => reactNativeCommandExecutor.executeCommandInContext(() => reactNativeCommandExecutor.stopPackager())));
}

/**
 * Sets up the debugger for the React Native project by dropping
 * the debugger stub into the workspace
 */
function setupReactNativeDebugger(): void {
    let launcherPath = require.resolve("./debugger/launcher");
    const extensionVersionNumber = require("../package.json").version;

    let debuggerEntryCode =
            `// This file is automatically generated. version:${extensionVersionNumber}
try {
    var path = require("path");
    var Launcher = require(${JSON.stringify(launcherPath)}).Launcher;
    new Launcher(path.resolve(__dirname, "..")).launch();
} catch (e) {
    throw new Error("Unable to launch application. Try deleting .vscode/launchReactNative.js and restarting vscode.");
}`;
    let vscodeFolder = path.join(vscode.workspace.rootPath, ".vscode");
    let debugStub = path.join(vscodeFolder, "launchReactNative.js");

    let fsUtil = new FileSystem();

    fsUtil.ensureDirectory(vscodeFolder).then(() => {
        fsUtil.ensureFileWithContents(debugStub, debuggerEntryCode);
    }).catch((err: Error) => {
        vscode.window.showErrorMessage(err.message);
    });
}